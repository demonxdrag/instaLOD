[{"/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/App.js":"1","/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/reportWebVitals.js":"2","/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/index.js":"3","/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/views/Home/Home.jsx":"4","/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/views/Login/Login.jsx":"5","/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/data.ts":"6","/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/components/FileUpload/FileUpload.jsx":"7"},{"size":581,"mtime":1606990292311,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606927544417,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1606927544416,"results":"11","hashOfConfig":"12"},{"size":349,"mtime":1606992211001,"results":"13","hashOfConfig":"9"},{"size":2177,"mtime":1606992468958,"results":"14","hashOfConfig":"9"},{"size":3025,"mtime":1606992522644,"results":"15","hashOfConfig":"9"},{"size":1274,"mtime":1606993272366,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m90533",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"j0hfx8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/App.js",[],"/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/reportWebVitals.js",[],["34","35"],"/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/index.js",[],["36","37"],"/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/views/Home/Home.jsx",["38","39","40"],"/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/views/Login/Login.jsx",["41"],"import React, { useState } from 'react';\nimport { login, signup, global_username } from '../../data.ts';\nimport { withRouter } from 'react-router-dom';\nimport './Login.scss';\n\nconst Login = (props) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const loginHandler = async ({ username, password }) => {\n        try {\n            let success = await login({ username, password });\n            console.log({ success })\n            if (success) {\n                localStorage.setItem('jwt', 'This should be a jwt')\n                localStorage.setItem('username', username)\n                props.history.push('/');\n            } else {\n                throw new Error('Username or password not found');\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    const signupHandler = async ({ username, password }) => {\n        try {\n            let success = await signup({ username, password });\n            console.log({ success })\n            if (success) {\n                localStorage.setItem('jwt', 'This should be a jwt')\n                localStorage.setItem('username', username)\n                props.history.push('/');\n            } else {\n                throw new Error('Username or password not found');\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    return (\n        <div className=\"Login\">\n            <div className=\"login-container\">\n                <h2>Login/Signup</h2>\n                <input className=\"form-control\" type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n                <input className=\"form-control\" type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                <div className=\"button-container\">\n                    <button className=\"btn btn-primary\" onClick={() => loginHandler({ username, password })}>Login</button>\n                    <button className=\"btn btn-secondary\" onClick={() => signupHandler({ username, password })}>Signup</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/data.ts",[],"/Users/adrianpappalardo/Documents/Developments/instalod/frontend/src/components/FileUpload/FileUpload.jsx",["42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":33},{"ruleId":"49","severity":1,"message":"54","line":1,"column":35,"nodeType":"51","messageId":"52","endLine":1,"endColumn":44},{"ruleId":"49","severity":1,"message":"55","line":2,"column":25,"nodeType":"51","messageId":"52","endLine":2,"endColumn":40},{"ruleId":"49","severity":1,"message":"56","line":7,"column":12,"nodeType":"51","messageId":"52","endLine":7,"endColumn":20},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'global_username' is defined but never used.","'errorMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]